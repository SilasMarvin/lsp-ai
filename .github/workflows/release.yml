name: release
on:
  workflow_dispatch:

  push:
    branches:
      - 'release/**'

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings -W unreachable-pub"
  RUSTUP_MAX_RETRIES: 10
  FETCH_DEPTH: 0 # pull in the tags for the version string
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
  CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc

jobs:
  dist:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: i686-pc-windows-msvc
            code-target: win32-ia32
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: ubuntu-22.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
          - os: macos-12
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-12
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    env:
      LSP_AI_TARGET: ${{ matrix.target }}

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup target add ${{ matrix.target }}
          rustup component add rust-src

      - name: Update apt repositories
        if: contains(matrix.os, 'ubuntu')
        run: sudo apt-get update -y

      - name: Install AArch64 target toolchain
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install gcc-aarch64-linux-gnu libc6-dev-arm64-cross  g++-aarch64-linux-gnu

      - name: Install ARM target toolchain
        if: matrix.target == 'arm-unknown-linux-gnueabihf'
        run: sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf

      - name: Dist
        run: cargo xtask dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: ./dist

  dist-x86_64-unknown-linux-musl:
    name: dist (x86_64-unknown-linux-musl)
    runs-on: ubuntu-latest
    env:
      LLM_LS_TARGET: x86_64-unknown-linux-musl
      # For some reason `-crt-static` is not working for clang without lld
      RUSTFLAGS: "-C link-arg=-fuse-ld=lld -C target-feature=-crt-static"
    container:
      image: rust:alpine
      volumes:
        - /usr/local/cargo/registry:/usr/local/cargo/registry

    steps:
      - name: Install dependencies
        run: apk add --no-cache git clang lld musl-dev nodejs npm openssl-dev pkgconfig g++ openssl-dev perl make

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup target add x86_64-unknown-linux-gnu
          rustup component add rust-src

      - name: Dist
        run: cargo xtask dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-musl
          path: ./dist

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: ["dist", "dist-x86_64-unknown-linux-musl"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - run: echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - run: 'echo "HEAD_SHA: $HEAD_SHA"'

      - name: Split branch name
        env:
          BRANCH: ${{ github.ref_name }}
        id: split
        run: echo "tag=${BRANCH##*/}" >> $GITHUB_OUTPUT

      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-apple-darwin
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-apple-darwin
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-gnu
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-unknown-linux-musl
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-unknown-linux-gnu
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-arm-unknown-linux-gnueabihf
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-x86_64-pc-windows-msvc
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-i686-pc-windows-msvc
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: dist-aarch64-pc-windows-msvc
          path: dist
      - run: ls -al ./dist

      - name: Publish Release
        uses: ./.github/actions/github-release
        with:
          files: "dist/*"
          name: ${{ steps.split.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
